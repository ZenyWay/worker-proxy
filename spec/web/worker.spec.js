(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";var worker_1=require("../../src/worker"),worker,service,onterminate;beforeEach(function(){worker=jasmine.createSpyObj("worker",["postMessage"]),service=Object.create(jasmine.createSpyObj("service",["asyncwork","syncwork","stop"])),service.syncwork.and.returnValue("foo"),service.asyncwork.and.returnValue(Promise.resolve("foo")),onterminate=service.stop.bind(service)}),beforeEach(function(){worker_1.default({worker:worker,service:service,onterminate:onterminate})}),describe("function hookService <S extends Object>({ worker: WorkerGlobalScope, service: S, onterminate: () => Promise<void> }): void",function(){it('should add an "onmessage" handler to the given worker',function(){expect(worker.onmessage).toEqual(jasmine.any(Function))}),describe("when the supplied argument is not an object",function(){it('should throw an "invalid argument" TypeError',function(){expect(function(){return worker_1.default(42)}).toThrowError(TypeError,"invalid argument")})}),describe('when "worker" is not defined or not a WorkerGlobalScope object',function(){it('should throw an "invalid argument" TypeError',function(){expect(function(){return worker_1.default({service:service,onterminate:onterminate})}).toThrowError(TypeError,"invalid argument"),expect(function(){return worker_1.default({worker:{},service:service,onterminate:onterminate})}).toThrowError(TypeError,"invalid argument")})}),describe('when "service" is not defined or not an object',function(){it('should throw an "invalid argument" TypeError',function(){expect(function(){return worker_1.default({worker:worker,onterminate:onterminate})}).toThrowError(TypeError,"invalid argument"),expect(function(){return worker_1.default({worker:worker,service:42,onterminate:onterminate})}).toThrowError(TypeError,"invalid argument")})}),describe('when "onterminate" is defined but not a method',function(){it('should throw an "invalid argument" TypeError',function(){expect(function(){return worker_1.default({worker:worker,service:service})}).not.toThrow(),expect(function(){return worker_1.default({worker:worker,service:service,onterminate:42})}).toThrowError(TypeError,"invalid argument")})}),describe("handler onmessage (event: WorkerServiceEvent): void",function(){var e,t;beforeEach(function(){e={uuid:42,target:"service",method:"syncwork",args:["foo","bar"]},t=function(e,t){t&&worker.postMessage.and.callFake(function(){return setTimeout(t)}),worker.onmessage({data:e})}}),it('should call the target method as specified in "event.data"',function(){t(e);var r=expect(service.syncwork);r.toHaveBeenCalledWith.apply(r,e.args),expect(service.syncwork).toHaveBeenCalledTimes(1),expect(service.asyncwork).not.toHaveBeenCalled(),expect(service.stop).not.toHaveBeenCalled()}),describe('when "event.data.args" is falsy',function(){beforeEach(function(r){delete e.args,t(e,r)}),it('should call the target method as specified in "event.data" with no arguments',function(){expect(service.syncwork).toHaveBeenCalledTimes(1),expect(service.syncwork).toHaveBeenCalledWith()})}),describe('when "event.data.args" is truthy but not Array-like',function(){beforeEach(function(r){e.args={foo:42},t(e,r)}),it('should post a request back to reject with an "invalid argument" TypeError',function(){expect(worker.postMessage).toHaveBeenCalledTimes(1),expect(worker.postMessage).toHaveBeenCalledWith({uuid:42,method:"reject",args:[{name:"TypeError",message:"invalid argument",stack:jasmine.anything()}]})})}),describe('when "event.data.uuid" is not a safe integer',function(){beforeEach(function(r){e.uuid=Number.MAX_VALUE,t(e,r)}),it('should post a request back to reject with an "invalid argument" TypeError',function(){expect(worker.postMessage).toHaveBeenCalledTimes(1),expect(worker.postMessage).toHaveBeenCalledWith({uuid:Number.MAX_VALUE,method:"reject",args:[{name:"TypeError",message:"invalid argument",stack:jasmine.anything()}]})})}),describe('when "event.data.target" is not a string',function(){beforeEach(function(r){e.target=64,t(e,r)}),it('should post a request back to reject with an "invalid argument" TypeError',function(){expect(worker.postMessage).toHaveBeenCalledTimes(1),expect(worker.postMessage).toHaveBeenCalledWith({uuid:42,method:"reject",args:[{name:"TypeError",message:"invalid argument",stack:jasmine.anything()}]})})}),describe('when "event.data.method" is not a string',function(){beforeEach(function(r){e.method=64,t(e,r)}),it('should post a request back to reject with an "invalid argument" TypeError',function(){expect(worker.postMessage).toHaveBeenCalledTimes(1),expect(worker.postMessage).toHaveBeenCalledWith({uuid:42,method:"reject",args:[{name:"TypeError",message:"invalid argument",stack:jasmine.anything()}]})})}),describe('when "event.data.target" is unknown',function(){beforeEach(function(r){e.target="shazam",t(e,r)}),it('should post a request back to reject with an "unknown method" Error',function(){expect(worker.postMessage).toHaveBeenCalledTimes(1),expect(worker.postMessage).toHaveBeenCalledWith({uuid:42,method:"reject",args:[{name:"Error",message:"unknown method",stack:jasmine.anything()}]})})}),describe("when the specified target method is unknown",function(){beforeEach(function(r){e.method="shazam",t(e,r)}),it('should post a request back to reject with an "unknown method" Error',function(){expect(worker.postMessage).toHaveBeenCalledTimes(1),expect(worker.postMessage).toHaveBeenCalledWith({uuid:42,method:"reject",args:[{name:"Error",message:"unknown method",stack:jasmine.anything()}]})})}),describe("when the target method successfully returns",function(){beforeEach(function(r){t(e,r)}),it("should post a request back to resolve to the returned value",function(){expect(worker.postMessage).toHaveBeenCalledTimes(1),expect(worker.postMessage).toHaveBeenCalledWith({uuid:42,method:"resolve",args:["foo"]})})}),describe("when the target method successfully resolves",function(){beforeEach(function(r){e.method="asyncwork",t(e,r)}),it("should post a request back to resolve to the resolved value",function(){expect(worker.postMessage).toHaveBeenCalledTimes(1),expect(worker.postMessage).toHaveBeenCalledWith({uuid:42,method:"resolve",args:["foo"]})})}),describe("when the target method throws",function(){beforeEach(function(r){e.method="syncwork",service.syncwork.and.callFake(function(){throw new Error("boom")}),t(e,r)}),it("should post a request back to reject with the corresponding error",function(){expect(worker.postMessage).toHaveBeenCalledTimes(1),expect(worker.postMessage).toHaveBeenCalledWith({uuid:42,method:"reject",args:[{name:"Error",message:"boom",stack:jasmine.anything()}]})})}),describe("when the target method rejects",function(){beforeEach(function(r){e.method="asyncwork",service.asyncwork.and.returnValue(Promise.reject(new Error("boom"))),t(e,r)}),it("should post a request back to reject with the corresponding error",function(){expect(worker.postMessage).toHaveBeenCalledTimes(1),expect(worker.postMessage).toHaveBeenCalledWith({uuid:42,method:"reject",args:[{name:"Error",message:"boom",stack:jasmine.anything()}]})})}),describe('when the target method specification is { method: "getServiceMethods" }',function(){beforeEach(function(r){delete e.target,e.method="getServiceMethods",t(e,r)}),it("should post a request back to resolve to the list of service methods",function(){expect(worker.postMessage).toHaveBeenCalledTimes(1),expect(worker.postMessage).toHaveBeenCalledWith({uuid:42,method:"resolve",args:[["asyncwork","syncwork","stop"]]})})})})});
},{"../../src/worker":3}],2:[function(require,module,exports){
"use strict";function isObject(t){return!!t&&"object"==typeof t}function isArrayLike(t){return isObject(t)&&isNumber(t.length)}function isFunction(t){return"function"==typeof t}function isString(t){return"string"==typeof t}function isNumber(t){return"number"==typeof t}function assert(t,i,r){if(!t)throw new i(r)}exports.isObject=isObject,exports.isArrayLike=isArrayLike,exports.isFunction=isFunction,exports.isString=isString,exports.isNumber=isNumber,exports.assert=assert;
},{}],3:[function(require,module,exports){
"use strict";function getPropertyNames(e){var t=Object.getOwnPropertyNames(e).filter(function(e){return"constructor"!==e}).reduce(function(e,t){return(e[t]=!0)&&e},this||{}),r=Object.getPrototypeOf(e);return isObjectPrototype(r)?Object.getOwnPropertyNames(t):getPropertyNames.call(t,r)}function isValidServiceBinderSpec(e){return utils_1.isObject(e)&&isWorkerGlobalScope(e.worker)&&utils_1.isObject(e.service)&&(!e.onterminate||utils_1.isFunction(e.onterminate))}function isWorkerGlobalScope(e){return utils_1.isObject(e)&&utils_1.isFunction(e.postMessage)}function isValidWorkerServiceMethodCall(e){return utils_1.isObject(e)&&(!e.target||utils_1.isString(e.target))&&utils_1.isString(e.method)&&(!e.args||utils_1.isArrayLike(e.args))}function isObjectPrototype(e){return utils_1.isObject(e)&&!utils_1.isObject(Object.getPrototypeOf(e))}var utils_1=require("../common/utils"),Promise=require("bluebird"),debug=require("debug"),log=debug("worker-proxy"),WorkerServiceClass=function(){function e(e){var t=e.worker,r=e.service,i=e.onterminate;this.worker=t,t.onmessage=this.onmessage.bind(this),log("worker.onmessage","hooked"),this.onterminate=i,this.service=r,this.methods=getPropertyNames(r).filter(function(e){return utils_1.isFunction(r[e])}),log("WorkerService.methods",this.methods)}return e.prototype.onmessage=function(e){var t=this;Promise.try(function(){return t.callTargetMethod(e.data)}).then(this.resolve.bind(this,e.data.uuid)).catch(this.reject.bind(this,e.data.uuid))},e.prototype.callTargetMethod=function(e){return utils_1.assert(Number.isSafeInteger(e.uuid),TypeError,"invalid argument"),this.getTargetMethod(e).apply(this,e.args||[])},e.prototype.getTargetMethod=function(e){utils_1.assert(isValidWorkerServiceMethodCall(e),TypeError,"invalid argument");var t=utils_1.isObject(this[e.target])?this[e.target]:this,r=utils_1.isFunction(t[e.method])?t[e.method]:this.unknown;return log("WorkerService.getTargetMethod",r),r},e.prototype.getServiceMethods=function(){return log("WorkerService.getServiceProxy",this.methods),this.methods},e.prototype.resolve=function(e,t){log("WorkerService.resolve",t),this.worker.postMessage({uuid:e,method:"resolve",args:[t]})},e.prototype.reject=function(e,t){log("WorkerService.reject",t),this.worker.postMessage({uuid:e,method:"reject",args:[{name:t.name,message:t.message,stack:t.stack}]})},e.prototype.unknown=function(){return Promise.reject(new Error("unknown method"))},e.hookService=function(t){utils_1.assert(isValidServiceBinderSpec(t),TypeError,"invalid argument");new e(t)},e}(),hookService=WorkerServiceClass.hookService;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=hookService;
},{"../common/utils":2,"bluebird":undefined,"debug":undefined}]},{},[1]);
